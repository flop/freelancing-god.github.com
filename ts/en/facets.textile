---
layout: ts_en
title: Facets
---

h2. Faceted Searching

Facet Searches are search summaries - they provide a breakdown of result counts for each of the defined categories/facets.

h3. Defining Facets

You define facets inside the *define_index* method, within your model. To specify that a field or attribute should be considered as a facet, explicitly label it using the *:facet* symbol.

{% highlight ruby %}
define_index do
  # ...
  indexes author.name, :as => :author, :facet => true
end
{% endhighlight %}

h3. Querying Facets

Facets are available through the facets class method on all ActiveRecord models that have Sphinx indexes, and are returned as a subclass of Hash. In this case
we're using the Article model:

{% highlight ruby %}
Article.facets # =>
{
  :author => {
    "Sherlock Holmes" => 3,
    "John Watson" => 10
  }
}
{% endhighlight %}

The facets method accepts the same options as the *search* method.

{% highlight ruby %}
Article.facets 'pancakes'
Article.facets :conditions => {:subject => 'pancakes'}
{% endhighlight %}

Below is a basic example of rendering the facet search results in a view:

{% highlight erb %}
<% @facets.each do |facet, values| %>
  <h5><%= facet %></h5>
  <ul>
  <% values.each do |key, count| %>
    <li><%= link_to key, :overwrite_params => {facet => key} %></li>
  <% end %>
  </ul>
<% end %>
{% endhighlight %}

To retrieve the ActiveRecord object results based on a selected facet, you can use the *for* method on a facet search result.

{% highlight ruby %}
Article.facets('pancakes').for(:author => "Pat Allan")
{% endhighlight %}
